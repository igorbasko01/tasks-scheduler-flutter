// Mocks generated by Mockito 5.4.2 from annotations
// in tasks_scheduler/test/services/kanbanflow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tasks_scheduler/utils/network_client.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNetworkClientResponse_0 extends _i1.SmartFake
    implements _i2.NetworkClientResponse {
  _FakeNetworkClientResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkClient extends _i1.Mock implements _i2.NetworkClient {
  @override
  _i3.Future<_i2.NetworkClientResponse> get(
    String? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<_i2.NetworkClientResponse>);
  @override
  _i3.Future<_i2.NetworkClientResponse> post(
    String? url, {
    Map<String, String>? headers,
    String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
        returnValueForMissingStub: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i3.Future<_i2.NetworkClientResponse>);
  @override
  _i3.Future<_i2.NetworkClientResponse> put(
    String? url, {
    Map<String, String>? headers,
    String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
        returnValueForMissingStub: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
            },
          ),
        )),
      ) as _i3.Future<_i2.NetworkClientResponse>);
  @override
  _i3.Future<_i2.NetworkClientResponse> delete(
    String? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#headers: headers},
        ),
        returnValue: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {#headers: headers},
          ),
        )),
        returnValueForMissingStub: _i3.Future<_i2.NetworkClientResponse>.value(
            _FakeNetworkClientResponse_0(
          this,
          Invocation.method(
            #delete,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i3.Future<_i2.NetworkClientResponse>);
}
