// Mocks generated by Mockito 5.4.2 from annotations
// in tasks_scheduler/test/screens/token_storage_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tasks_scheduler/services/token_storage.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TokenStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenStorage extends _i1.Mock implements _i2.TokenStorage {
  @override
  _i3.Stream<Map<String, String>> get allTokensStream => (super.noSuchMethod(
        Invocation.getter(#allTokensStream),
        returnValue: _i3.Stream<Map<String, String>>.empty(),
        returnValueForMissingStub: _i3.Stream<Map<String, String>>.empty(),
      ) as _i3.Stream<Map<String, String>>);
  @override
  _i3.Future<void> saveToken(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<String?> getToken(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [key],
        ),
        returnValue: _i3.Future<String?>.value(),
        returnValueForMissingStub: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);
  @override
  _i3.Future<Map<String, String>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i3.Future<Map<String, String>>.value(<String, String>{}),
        returnValueForMissingStub:
            _i3.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i3.Future<Map<String, String>>);
  @override
  _i3.Future<void> deleteToken(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<void> refreshTokens() => (super.noSuchMethod(
        Invocation.method(
          #refreshTokens,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
